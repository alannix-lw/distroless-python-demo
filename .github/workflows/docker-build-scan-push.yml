name: Docker Build/Scan/Push

on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 7 * * 4"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  BuildScanPush:
    runs-on: ubuntu-latest
    env:
      LW_ACCESS_TOKEN: ${{ secrets.LW_ACCESS_TOKEN }}
      LW_ACCOUNT_NAME: ${{ secrets.LW_ACCOUNT_NAME }}
      LW_SCANNER_SCAN_LIBRARY_PACKAGES: true
    steps:

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build the latest Docker image
        run: docker build -t alannix/distroless-python .

      - name: Download Lacework Scanner
        run: |
          curl -LJO https://github.com/lacework/lacework-vulnerability-scanner/releases/latest/download/lw-scanner-linux-amd64
          sudo mv lw-scanner-linux-amd64 lw-scanner
          sudo chmod +x lw-scanner

      - name: Scan Image
        run: |
          printf ".\ntrue\nfalse" | ./lw-scanner config data
          ./lw-scanner image evaluate alannix/distroless-python latest --build-id ${{ github.run_id }} -v=false

      - name: Check for Vulnerabilities
        id: vuln-check
        run: |
          export VULNS=$(jq .high_vulnerabilities $(find . -type f -name 'evaluation*'))
          echo ::set-output name=vulns::$VULNS
          echo VULNS
          echo $VULNS

      - name: Output Results
        if: ${{ steps.vuln-check.outputs.vulns > 0 }}
        run: |
          echo "Build failed, for this container is FILTHY"
          echo "Details: " $VULNS " critical/high vulnerabilities detected."
          #This seems to be the only way to get the JQ output pretty printed
          jq -f message.jq $(find . -type f -name 'evaluation*') 

      - name: Fail if Vulnerabilities
        if: ${{ steps.vuln-check.outputs.vulns > 0 }}
        uses: actions/github-script@v3
        with:
          script: |
            core.setFailed("Critical/High vulnerabilities found!")

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push the latest Docker image
        run: docker push alannix/distroless-python
